(define (bezout-gcd a b)
  ; Переменные на каждом шаге алгоритма:
  ; r-1 - r_{n-1} = a * s + b * t;
  ; r-2 - r_{n-2} = a * u + b * v.
  (define (step r-2 s t r-1 u v)
    (if (zero? r-1)
        ; Если r-1 = 0, то НОД(a, b) = r-2 и его коэффициенты Безу (КБ) найдены,
        ; возврат этой тройки 
        (values r-2 s t)

        ; Иначе, нужно вычислить:
        ;   - следующий остаток r = r-1 - r-2 * q (1);
        ;   - и КБ для r, по выражению (1) и известным КБ для r-1, r-2.
        ; На следующем шаге:
        ;   - r-2 ← r-1 (с коэффициентами u и v),
        ;   - и r-1 ← r с новыми коэффициентами.
        (let-values (((q r) (quotient/remainder r-2 r-1)))
          (step r-1 u v
                r (- s (* q u))
                  (- t (* q v)))))) 

  ; На первом шаге алгоритма остатками являются a и b с очевидными начальными
  ; КБ.
  (step a 1 0
        b 0 1))
